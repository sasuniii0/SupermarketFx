package lk.ijse.gdse71.supermarketfx.dao.custom.impl;

import lk.ijse.gdse71.supermarketfx.dao.custom.OrderDAO;
import lk.ijse.gdse71.supermarketfx.db.DBConnection;
import lk.ijse.gdse71.supermarketfx.dto.OrderDto;
import lk.ijse.gdse71.supermarketfx.dao.SQLUtil;
import lk.ijse.gdse71.supermarketfx.entity.Order;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class OrderDAOImpl implements OrderDAO {

    @Override
    public ArrayList<Order> getAll() throws SQLException {
        return null;
    }

    @Override
    public boolean save(Order dto) throws SQLException {
        return false;
    }
    public String getNextId() throws SQLException {
        ResultSet rst = SQLUtil.execute("SELECT MAX(order_id) FROM Orders");

        if (rst.next()) {
            String lastId = rst.getString(1);

            // Check if lastId is not null and has at least two characters to safely extract substring
            if (lastId != null && lastId.length() >= 2) {
                String subString = lastId.substring(1); // Extract numeric part
                try {
                    int i = Integer.parseInt(subString); // Convert to integer
                    int newIndex = i + 1; // Increment by 1
                    return String.format("O%03d", newIndex); // Format as O001, O002, etc.
                } catch (NumberFormatException e) {
                    System.err.println("Error parsing order_id: " + lastId);
                    return "O001"; // Return default if there's an issue
                }
            }
        }
        return "O001"; // Default for first order
    }


    /*public String getNextId() throws SQLException {
        ResultSet rst = SQLUtil.execute("select order_id from Orders order by order_id desc limit 1");

        if (rst.next()) {
            String lastId = rst.getString(1);
            String subString = lastId.substring(1);
            int i = Integer.parseInt(subString);
            int newIndex = i+1;
            return String.format("0%03d", newIndex);
        }
        return "O001";
    }*/

    @Override
    public boolean delete(String id) throws SQLException {
        return false;
    }

    @Override
    public boolean update(Order dto) throws SQLException {
        return false;
    }
}
